package org.twizer.android.datamodel;

import com.google.gson.annotations.Expose;
import com.google.gson.annotations.SerializedName;

import org.apache.commons.lang3.builder.EqualsBuilder;
import org.apache.commons.lang3.builder.HashCodeBuilder;
import org.apache.commons.lang3.builder.ToStringBuilder;

/**
 * Generated by jsonschema2pojo
 *
 * @author Jorge Antonio Diaz-Benito Soriano (github.com/Stoyicker).
 */
public final class Trend {

    @Expose
    private Object events;
    @Expose
    private String name;
    @SerializedName("promoted_content")
    @Expose
    private Object promotedContent;
    @Expose
    private String query;
    @Expose
    private String url;

    /**
     * @return The events
     */
    public Object getEvents() {
        return events;
    }

    /**
     * @param events The events
     */
    public void setEvents(final Object events) {
        this.events = events;
    }

    /**
     * @return The name
     */
    public String getName() {
        return name;
    }

    /**
     * @param name The name
     */
    public void setName(final String name) {
        this.name = name;
    }

    /**
     * @return The promotedContent
     */
    public Object getPromotedContent() {
        return promotedContent;
    }

    /**
     * @param promotedContent The promoted_content
     */
    public void setPromotedContent(final Object promotedContent) {
        this.promotedContent = promotedContent;
    }

    /**
     * @return The query
     */
    public String getQuery() {
        return query;
    }

    /**
     * @param query The query
     */
    public void setQuery(final String query) {
        this.query = query;
    }

    /**
     * @return The url
     */
    public String getUrl() {
        return url;
    }

    /**
     * @param url The url
     */
    public void setUrl(final String url) {
        this.url = url;
    }

    @Override
    public String toString() {
        return ToStringBuilder.reflectionToString(this);
    }

    @Override
    public int hashCode() {
        return new HashCodeBuilder().append(events).append(name).append(promotedContent).append(query).append(url).toHashCode();
    }

    @Override
    public boolean equals(final Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof Trend) == false) {
            return false;
        }
        Trend rhs = ((Trend) other);
        return new EqualsBuilder().append(events, rhs.events).append(name, rhs.name).append(promotedContent, rhs.promotedContent).append(query, rhs.query).append(url, rhs.url).isEquals();
    }

}